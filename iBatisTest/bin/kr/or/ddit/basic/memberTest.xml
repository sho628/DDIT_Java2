<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="memberTest">
	
<!-- 
	이 영역에 sql문에 맞는 태그를 사용하여 SQL문을 기술한다.
	
	사용할 수 있는 기본적인 태그들
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	
		1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는 이름
		2) parameterClass 속성 : sql문에 사용될 데이터가 들어있는 객체를 지정한다.
		                      (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
		                      (typeAlias로 지정한 alias명을 사용할 수 있다.)
		3) resultClass 속성 : select문을 실행한 결과를 담을 객체를 지정한다.
		                    (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
		4) resultMap 속성 : 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에
		                                     적절한 매핑을 위해 사용한다.
 -->
 <!-- insert 연습 -->
 <insert id="insertMember" parameterClass="kr.or.ddit.member.vo.MemberVO">
 	
 	insert into mymember
    (mem_id, mem_name, mem_tel, mem_addr)
    values (#memId#,#memName#,#memTel#,#memAddr#)
 
 </insert>
 
 <!-- update 연습 -->
 <update id="updateMember" parameterClass="kr.or.ddit.member.vo.MemberVO">
 
 	update mymember
	set mem_name = #memName#,
		mem_tel = #memTel#,
		mem_addr = #memAddr#
	where mem_id = #memId#
 
 </update>
 
 <!-- delete 연습 -->
 <delete id="deleteMember" parameterClass="String">
 	
 	delete from mymember
	where mem_id = #memId#
 
 </delete>
 
 <select id="getMemberAll" resultClass="memVO">
 
 	select mem_id as memId
 	      ,mem_name as memName
 	      ,mem_tel as memTel
 	      ,mem_addr as memAddr
 	from mymember
 
 </select>
 
 <select id="getMember" resultClass="memVO">
 
 	select mem_id as memId
 	      ,mem_name as memName
 	      ,mem_tel as memTel
 	      ,mem_addr as memAddr
 	from mymember
 	where mem_id = #memId#
 
 </select>

</sqlMap>			





